======================
3. Print a square
======================
Function
========
Function to print a square given a size. The size must be a positive integer or 0, otherwise
raise an TypeError for differente type or ValueError for negative integers.

Import module:
-------------
    >>> print_square = __import__('4-print_square').print_square

Tests:
-----

Should print the square:
    >>> print_square(8)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########

Should print the square:
    >>> print_square(2 + 4 - 3)
    ###
    ###
    ###

Should print no square, but execute normally:
    >>> print_square(0)
    
Should raise an exception TypeError for no arguments:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Should raise an exception TypeError for more than one argument:
    >>> print_square(1, 3, 3)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 3 were given

Should raise an exception TypeError for argument tuple:
    >>> print_square((2, 3))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception TypeError for size different to int:
    >>> print_square("13")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception TypeError for infinite float:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception TypeError for complex number:
    >>> print_square(1 + 7j)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Should raise an exception ValueError for negative size:
    >>> print_square(-2)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0
